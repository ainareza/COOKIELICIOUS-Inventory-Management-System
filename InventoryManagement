
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class InventoryManagement extends JFrame implements ActionListener {
    private JTable inventoryTable;
    private DefaultTableModel tableModel;
    private JButton addButton, updateButton, deleteButton, btnReturn;
    private JTextField nameField, quantityField, priceField;
    
    public InventoryManagement() {
        setTitle("Cookielicious Inventory Management");
        setSize(800, 600);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        String[] columns = {"Cookie Name", "Quantity", "Price"};
        Object[][] data = {
            {"Chocolate Chip Cookie", 50, 12.50},
            {"Oatmeal Raisin Cookie", 30, 11.00},
            {"Peanut Butter Cookie", 40, 14.00},
            {"Snickerdoodle Cookie", 25, 11.50},
            {"Sugar Cookie", 60, 12.00},
            {"Gingerbread Cookie", 20, 13.50},
            {"Double Chocolate Cookie", 35, 15.00},
            {"Shortbread Cookie", 45, 10.50},
            {"Macadamia Nut Cookie", 50, 10.00}
        };
        tableModel = new DefaultTableModel(data, columns);
        inventoryTable = new JTable(tableModel);

        JScrollPane scrollPane = new JScrollPane(inventoryTable);
        add(scrollPane, BorderLayout.CENTER);

        JPanel inputPanel = new JPanel();
        inputPanel.setLayout(new GridLayout(4, 2));
        inputPanel.add(new JLabel("Cookie Name:"));
        nameField = new JTextField();
        inputPanel.add(nameField);
        inputPanel.add(new JLabel("Quantity:"));
        quantityField = new JTextField();
        inputPanel.add(quantityField);
        inputPanel.add(new JLabel("Price(RM):"));
        priceField = new JTextField();
        inputPanel.add(priceField);

        add(inputPanel, BorderLayout.NORTH);

        JPanel buttonPanel = new JPanel();
        addButton = new JButton("Add");
        updateButton = new JButton("Update");
        deleteButton = new JButton("Delete");
        btnReturn = new JButton("RETURN");
        
        buttonPanel.add(addButton);
        buttonPanel.add(updateButton);
        buttonPanel.add(deleteButton);
        buttonPanel.add(btnReturn);

        add(buttonPanel, BorderLayout.SOUTH);

        addButton.addActionListener(this);
        updateButton.addActionListener(this);
        deleteButton.addActionListener(this);
        btnReturn.addActionListener(this);

        setVisible(true);
    }

    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == addButton) {
            String name = nameField.getText();
            int quantity = Integer.parseInt(quantityField.getText());
            double price = Double.parseDouble(priceField.getText());
            tableModel.addRow(new Object[]{name, quantity, price});
        } else if (e.getSource() == updateButton) {
            int selectedRow = inventoryTable.getSelectedRow();
            if (selectedRow >= 0) {
                tableModel.setValueAt(nameField.getText(), selectedRow, 0);
                tableModel.setValueAt(Integer.parseInt(quantityField.getText()), selectedRow, 1);
                tableModel.setValueAt(Double.parseDouble(priceField.getText()), selectedRow, 2);
            }
        } else if (e.getSource() == deleteButton) {
            int selectedRow = inventoryTable.getSelectedRow();
            if (selectedRow >= 0) {
                tableModel.removeRow(selectedRow);
            }
        } else if (e.getSource() == btnReturn) {
            dispose();
            new MenuPage();
        }
    }
}

